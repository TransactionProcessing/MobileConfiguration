// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MobileConfiguration.Database;

#nullable disable

namespace MobileConfiguration.Database.Migrations.SqlServer
{
    [DbContext(typeof(ConfigurationSqlServerContext))]
    partial class ConfigurationSqlServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MobileConfiguration.Database.Entities.ApplicationCentreConfiguration", b =>
                {
                    b.Property<string>("ApplicationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AndroidKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IosKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MacosKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WindowsKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationId");

                    b.ToTable("ApplicationCentreConfigurations");
                });

            modelBuilder.Entity("MobileConfiguration.Database.Entities.Configuration", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ConfigType")
                        .HasColumnType("int");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSecret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnableAutoUpdates")
                        .HasColumnType("bit");

                    b.Property<string>("HostAddresses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LogLevelId")
                        .HasColumnType("int");

                    b.HasKey("Id", "ConfigType");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("MobileConfiguration.Database.Entities.LoggingLevels", b =>
                {
                    b.Property<int>("LogLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogLevelId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LogLevelId");

                    b.ToTable("LoggingLevels");
                });
#pragma warning restore 612, 618
        }
    }
}
